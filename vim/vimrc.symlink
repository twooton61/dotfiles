set nocompatible
filetype off

" Set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" Plugin time
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'

" Snippets
Plugin 'Shougo/neocomplcache'
Plugin 'Shougo/neosnippet'
Plugin 'Shougo/neosnippet-snippets'
Plugin 'honza/vim-snippets'

" Add-ons
Plugin 'scrooloose/nerdtree'
Plugin 'tpope/vim-surround'
Plugin 'kien/ctrlp.vim'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'scrooloose/nerdcommenter'
Plugin 'amirh/HTML-AutoCloseTag'
Plugin 'vim-scripts/sessionman.vim'
Plugin 'bling/vim-airline'
Plugin 'Lokaltog/vim-easymotion'
Plugin 'mbbill/undotree'
Plugin 'mattn/emmet-vim'
Plugin 'Raimondi/delimitMate'
Plugin 'tpope/vim-repeat'
Plugin 'edkolev/tmuxline.vim'
Plugin 'bling/vim-bufferline'
Plugin 'gorodinskiy/vim-coloresque'
Plugin 'scrooloose/syntastic'
Plugin 'godlygeek/tabular'
Plugin 'spf13/vim-autoclose'
Plugin 'majutsushi/tagbar'
Plugin 'tpope/vim-dispatch'

" Languages
Plugin 'tpope/vim-rails'
Plugin 'elzr/vim-json'
Plugin 'groenewege/vim-less'
Plugin 'pangloss/vim-javascript'
Plugin 'briancollins/vim-jst'
Plugin 'kchmck/vim-coffee-script'
Plugin 'hail2u/vim-css3-syntax'
Plugin 'tpope/vim-haml'
Plugin 'tpope/vim-markdown'
Plugin 'spf13/PIV'
Plugin 'arnaud-lb/vim-php-namespace'
Plugin 'beyondwords/vim-twig'
Plugin 'derekwyatt/vim-scala'
Plugin 'mxw/vim-jsx'
Plugin 'othree/yajs.vim'
Plugin 'elixir-lang/vim-elixir'
Plugin 'carlosgaldino/elixir-snippets'

" Git
Plugin 'tpope/vim-fugitive'
Plugin 'mhinz/vim-signify'

" Themes
Plugin 'daylerees/colour-schemes', { 'rtp': 'vim/' }
Plugin 'morhetz/gruvbox'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" To ignore plugin indent changes, instead use:
" filetype plugin on

" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just
" :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to
" auto-approve removal

" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
colorscheme gruvbox
if !has("gui_running")
  let g:gruvbox_italic=0
endif
syntax on
scriptencoding utf-8

let mapleader=","                           " mapleader is comma
let g:indent_guides_enable_on_vim_startup=0 " no indent guides
let g:user_emmet_leader_key=','         " emmet leader key is ctrl-z
let g:neocomplcache_enable_at_startup = 1   " enable neocomplcache on start
let g:autoclose_vim_commentmode = 1         " Don't autoclose in vim files
let g:bufferline_echo = 0                   " No bufferline below airline

" set some useful options
set number                     " show numbers
set nospell                    " no spell checking
set t_Co=256                   " for colorschemes
set fillchars+=stl:\ ,stlnc:\  " for powerline
set autoindent                 " smart indentation
set copyindent                 " copy indentation when autoindenting
set backspace=indent,eol,start " make backspace normal
set smartindent                " be smart about indenting
set tabstop=2                  " 2 space tabs
set shiftwidth=2               " 2 space tabs
set softtabstop=2              " 2 space tabs
set expandtab                  " make tabs
set background=dark            " dark colorschemes
set showmatch                  " show matching in search
set laststatus=2               " for powerline
set scrolloff=5                " stay 5 lines from top or bottom
set linespace=12               " nice linespacing
set foldmethod=manual          " manually set folds
set visualbell                 " don't beep
set noerrorbells               " don't beep
set mouse=a                    " let me scroll
set hlsearch                   " highlight search results
set incsearch                  " increment through search results
set ignorecase                 " ignore cases in search
set undodir=~/.vim/undo//      " set undo directory
set directory=~/.vim/swap//    " set swap directory
set backupdir=~/.vim/backup//  " set backup directory
set viewdir=~/.vim/views//     " set views directory

" custom mappings
nnoremap <Leader>w :w<CR>
nnoremap <Leader>n :NERDTreeToggle<CR>
noremap <left> <nop>
noremap <right> <nop>
noremap <up> <nop>
noremap <down> <nop>
nmap <leader>t :TagbarToggle<CR>
nmap <silent> <leader>/ :set invhlsearch<CR>
vnoremap < <gv
vnoremap > >gv
imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)

" SuperTab like snippets behavior.
imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: pumvisible() ? "\<C-n>" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: "\<TAB>"

" Powerline stuff
let g:Powerline_symbols = 'fancy'
let g:airline_powerline_fonts = 1
let g:airline_theme = 'tomorrow'
if has('statusline')
  set statusline=%<%f\                     " Filename
  set statusline+=%w%h%m%r                 " Options
  set statusline+=%{fugitive#statusline()} " Git Hotness
  set statusline+=\ [%{&ff}/%Y]            " Filetype
  set statusline+=\ [%{getcwd()}]          " Current dir
  set statusline+=%=%-14.(%l,%c%V%)\ %p%%  " Right aligned file nav info
endif

" omnicomplete and file recognition
autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
autocmd FileType ruby setlocal omnifunc=rubycomplete#Complete
autocmd FileType haskell setlocal omnifunc=necoghc#omnifunc
autocmd BufNewFile,BufRead *.coffee set filetype=coffee

" For snippet_complete marker.
if has('conceal')
  set conceallevel=2 concealcursor=i
endif

" Save and load fold settings automatically
" Reference: http://dotfiles.org/~tsukkee/.vimrc
" Don't save options.
set viewoptions-=options
augroup vimrc
    autocmd BufWritePost *
    \   if expand('%') != '' && &buftype !~ 'nofile'
    \|      mkview
    \|  endif
    autocmd BufWinEnter *
    \   if expand('%') != '' && &buftype !~ 'nofile'
    \|      silent loadview
    \|  endif
